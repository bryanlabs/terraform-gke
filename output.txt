ailabs:[code] dan@devbox:gke-cluster-terraform (master) 
$ terraform apply -var-file=${ENVIRONMENT}.tfvars

An execution plan has been generated and is shown below.
Resource actions are indicated with the following symbols:
  + create

Terraform will perform the following actions:

  # google_container_cluster.cluster will be created
  + resource "google_container_cluster" "cluster" {
      + additional_zones            = (known after apply)
      + cluster_autoscaling         = (known after apply)
      + cluster_ipv4_cidr           = (known after apply)
      + enable_binary_authorization = (known after apply)
      + enable_kubernetes_alpha     = false
      + enable_legacy_abac          = false
      + enable_tpu                  = (known after apply)
      + endpoint                    = (known after apply)
      + id                          = (known after apply)
      + initial_node_count          = 1
      + instance_group_urls         = (known after apply)
      + ip_allocation_policy        = (known after apply)
      + location                    = "us-east1"
      + logging_service             = (known after apply)
      + master_version              = (known after apply)
      + monitoring_service          = (known after apply)
      + name                        = "gke-from-scratch-249100-cluster"
      + network                     = "default"
      + node_locations              = (known after apply)
      + node_version                = (known after apply)
      + project                     = (known after apply)
      + region                      = (known after apply)
      + remove_default_node_pool    = true
      + services_ipv4_cidr          = (known after apply)
      + subnetwork                  = (known after apply)
      + zone                        = (known after apply)

      + addons_config {
          + horizontal_pod_autoscaling {
              + disabled = (known after apply)
            }

          + http_load_balancing {
              + disabled = (known after apply)
            }

          + kubernetes_dashboard {
              + disabled = (known after apply)
            }

          + network_policy_config {
              + disabled = false
            }
        }

      + master_auth {
          + client_certificate     = (known after apply)
          + client_key             = (sensitive value)
          + cluster_ca_certificate = (known after apply)

          + client_certificate_config {
              + issue_client_certificate = (known after apply)
            }
        }

      + network_policy {
          + enabled  = true
          + provider = "CALICO"
        }

      + node_config {
          + disk_size_gb      = (known after apply)
          + disk_type         = (known after apply)
          + guest_accelerator = (known after apply)
          + image_type        = (known after apply)
          + labels            = (known after apply)
          + local_ssd_count   = (known after apply)
          + machine_type      = (known after apply)
          + metadata          = (known after apply)
          + min_cpu_platform  = (known after apply)
          + oauth_scopes      = (known after apply)
          + preemptible       = (known after apply)
          + service_account   = (known after apply)
          + tags              = (known after apply)

          + sandbox_config {
              + sandbox_type = (known after apply)
            }

          + taint {
              + effect = (known after apply)
              + key    = (known after apply)
              + value  = (known after apply)
            }

          + workload_metadata_config {
              + node_metadata = (known after apply)
            }
        }

      + node_pool {
          + initial_node_count  = (known after apply)
          + instance_group_urls = (known after apply)
          + max_pods_per_node   = (known after apply)
          + name                = (known after apply)
          + name_prefix         = (known after apply)
          + node_count          = (known after apply)
          + version             = (known after apply)

          + autoscaling {
              + max_node_count = (known after apply)
              + min_node_count = (known after apply)
            }

          + management {
              + auto_repair  = (known after apply)
              + auto_upgrade = (known after apply)
            }

          + node_config {
              + disk_size_gb      = (known after apply)
              + disk_type         = (known after apply)
              + guest_accelerator = (known after apply)
              + image_type        = (known after apply)
              + labels            = (known after apply)
              + local_ssd_count   = (known after apply)
              + machine_type      = (known after apply)
              + metadata          = (known after apply)
              + min_cpu_platform  = (known after apply)
              + oauth_scopes      = (known after apply)
              + preemptible       = (known after apply)
              + service_account   = (known after apply)
              + tags              = (known after apply)

              + sandbox_config {
                  + sandbox_type = (known after apply)
                }

              + taint {
                  + effect = (known after apply)
                  + key    = (known after apply)
                  + value  = (known after apply)
                }

              + workload_metadata_config {
                  + node_metadata = (known after apply)
                }
            }
        }
    }

  # google_container_node_pool.general_purpose will be created
  + resource "google_container_node_pool" "general_purpose" {
      + cluster             = "gke-from-scratch-249100-cluster"
      + id                  = (known after apply)
      + initial_node_count  = 1
      + instance_group_urls = (known after apply)
      + location            = "us-east1"
      + max_pods_per_node   = (known after apply)
      + name                = "gke-from-scratch-249100-general"
      + name_prefix         = (known after apply)
      + node_count          = (known after apply)
      + project             = (known after apply)
      + region              = (known after apply)
      + version             = (known after apply)
      + zone                = (known after apply)

      + autoscaling {
          + max_node_count = 3
          + min_node_count = 1
        }

      + management {
          + auto_repair  = true
          + auto_upgrade = true
        }

      + node_config {
          + disk_size_gb      = (known after apply)
          + disk_type         = (known after apply)
          + guest_accelerator = (known after apply)
          + image_type        = (known after apply)
          + labels            = (known after apply)
          + local_ssd_count   = (known after apply)
          + machine_type      = "n1-standard-1"
          + metadata          = (known after apply)
          + oauth_scopes      = [
              + "https://www.googleapis.com/auth/devstorage.read_only",
              + "https://www.googleapis.com/auth/logging.write",
              + "https://www.googleapis.com/auth/monitoring",
            ]
          + preemptible       = false
          + service_account   = (known after apply)
        }
    }

Plan: 2 to add, 0 to change, 0 to destroy.

Do you want to perform these actions in workspace "production"?
  Terraform will perform the actions described above.
  Only 'yes' will be accepted to approve.

  Enter a value: yes

google_container_cluster.cluster: Creating...
google_container_cluster.cluster: Still creating... [10s elapsed]
google_container_cluster.cluster: Still creating... [20s elapsed]
google_container_cluster.cluster: Still creating... [30s elapsed]
google_container_cluster.cluster: Still creating... [40s elapsed]
google_container_cluster.cluster: Still creating... [50s elapsed]
google_container_cluster.cluster: Still creating... [1m0s elapsed]
google_container_cluster.cluster: Still creating... [1m10s elapsed]
google_container_cluster.cluster: Still creating... [1m20s elapsed]
google_container_cluster.cluster: Still creating... [1m30s elapsed]
google_container_cluster.cluster: Still creating... [1m40s elapsed]
google_container_cluster.cluster: Still creating... [1m50s elapsed]
google_container_cluster.cluster: Still creating... [2m0s elapsed]
google_container_cluster.cluster: Still creating... [2m10s elapsed]
google_container_cluster.cluster: Still creating... [2m20s elapsed]
google_container_cluster.cluster: Still creating... [2m30s elapsed]
google_container_cluster.cluster: Still creating... [2m40s elapsed]
google_container_cluster.cluster: Still creating... [2m50s elapsed]
google_container_cluster.cluster: Still creating... [3m0s elapsed]
google_container_cluster.cluster: Still creating... [3m10s elapsed]
google_container_cluster.cluster: Still creating... [3m20s elapsed]
google_container_cluster.cluster: Still creating... [3m30s elapsed]
google_container_cluster.cluster: Still creating... [3m40s elapsed]
google_container_cluster.cluster: Still creating... [3m50s elapsed]
google_container_cluster.cluster: Still creating... [4m0s elapsed]
google_container_cluster.cluster: Still creating... [4m10s elapsed]
google_container_cluster.cluster: Still creating... [4m20s elapsed]
google_container_cluster.cluster: Still creating... [4m30s elapsed]
google_container_cluster.cluster: Still creating... [4m40s elapsed]
google_container_cluster.cluster: Still creating... [4m50s elapsed]
google_container_cluster.cluster: Still creating... [5m0s elapsed]
google_container_cluster.cluster: Still creating... [5m10s elapsed]
google_container_cluster.cluster: Still creating... [5m20s elapsed]
google_container_cluster.cluster: Still creating... [5m30s elapsed]
google_container_cluster.cluster: Still creating... [5m40s elapsed]
google_container_cluster.cluster: Still creating... [5m50s elapsed]
google_container_cluster.cluster: Still creating... [6m0s elapsed]
google_container_cluster.cluster: Still creating... [6m10s elapsed]
google_container_cluster.cluster: Still creating... [6m20s elapsed]
google_container_cluster.cluster: Still creating... [6m30s elapsed]
google_container_cluster.cluster: Still creating... [6m40s elapsed]
google_container_cluster.cluster: Creation complete after 6m45s [id=gke-from-scratch-249100-cluster]
google_container_node_pool.general_purpose: Creating...
google_container_node_pool.general_purpose: Still creating... [10s elapsed]
google_container_node_pool.general_purpose: Still creating... [20s elapsed]
google_container_node_pool.general_purpose: Still creating... [30s elapsed]
google_container_node_pool.general_purpose: Still creating... [40s elapsed]
google_container_node_pool.general_purpose: Still creating... [50s elapsed]
google_container_node_pool.general_purpose: Still creating... [1m0s elapsed]
google_container_node_pool.general_purpose: Still creating... [1m10s elapsed]
google_container_node_pool.general_purpose: Still creating... [1m20s elapsed]
google_container_node_pool.general_purpose: Creation complete after 1m27s [id=us-east1/gke-from-scratch-249100-cluster/gke-from-scratch-249100-general]

Apply complete! Resources: 2 added, 0 changed, 0 destroyed.

Outputs:


$ gcloud beta container clusters get-credentials gke-from-scratch-249100-cluster --region us-east1 --project gke-from-scratch-249100
Fetching cluster endpoint and auth data.
kubeconfig entry generated for gke-from-scratch-249100-cluster.
ailabs:[code] dan@devbox:gke-cluster-terraform (master) 

$ kubectl get nodes
NAME                                                  STATUS   ROLES    AGE   VERSION
gke-gke-from-scratch-gke-from-scratch-937deb86-dd2m   Ready    <none>   19m   v1.12.8-gke.10
gke-gke-from-scratch-gke-from-scratch-d55dc570-28x2   Ready    <none>   19m   v1.12.8-gke.10
gke-gke-from-scratch-gke-from-scratch-f5da62b4-mgbc   Ready    <none>   19m   v1.12.8-gke.10